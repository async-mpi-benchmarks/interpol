#pragma once

// Warning, this file is autogenerated by cbindgen. Don't modify this manually.

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>


typedef int32_t MpiRank;

typedef uint64_t Tsc;

typedef double Usecs;

typedef int32_t MpiComm;

typedef int32_t MpiTag;

typedef int32_t MpiReq;

/**
 * Registers an `MPI_Init` call into a static vector.
 */
void register_init(MpiRank current_rank, Tsc tsc, Usecs time);

/**
 * Registers an `MPI_Init_thread` call into a static vector.
 */
void register_init_thread(MpiRank current_rank,
                          Tsc tsc,
                          Usecs time,
                          int32_t required_thread_lvl,
                          int32_t provided_thread_lvl);

/**
 * Registers an `MPI_Finalize` call into a static vector.
 *
 * As this *should* be the final registered event, the contents of the vector will be sorted with
 * every other MPI processes vectors' and then serialized.
 */
void register_finalize(MpiRank current_rank,
                       Tsc tsc,
                       Usecs time);

/**
 * Registers an `MPI_Send` call into a static vector.
 */
void register_send(MpiRank current_rank,
                   MpiRank partner_rank,
                   uint32_t nb_bytes,
                   MpiComm comm,
                   MpiTag tag,
                   Tsc tsc,
                   Tsc duration);

/**
 * Registers an `MPI_Recv` call into a static vector.
 */
void register_recv(MpiRank current_rank,
                   MpiRank partner_rank,
                   uint32_t nb_bytes,
                   MpiComm comm,
                   MpiTag tag,
                   Tsc tsc,
                   Tsc duration);

/**
 * Registers an `MPI_Isend` call into a static vector.
 */
void register_isend(MpiRank current_rank,
                    MpiRank partner_rank,
                    uint32_t nb_bytes,
                    MpiComm comm,
                    MpiReq req,
                    MpiTag tag,
                    Tsc tsc,
                    Tsc duration);

/**
 * Registers an `MPI_Irecv` call into a static vector.
 */
void register_irecv(MpiRank current_rank,
                    MpiRank partner_rank,
                    uint32_t nb_bytes,
                    MpiComm comm,
                    MpiReq req,
                    MpiTag tag,
                    Tsc tsc,
                    Tsc duration);

/**
 * Registers an `MPI_Barrier` call into a static vector.
 */
void register_barrier(MpiRank current_rank,
                      MpiComm comm,
                      Tsc tsc,
                      Tsc duration);

/**
 * Registers an `MPI_Test` call into a static vector.
 */
void register_test(MpiRank current_rank,
                   MpiReq req,
                   bool finished,
                   Tsc tsc,
                   Tsc duration);

/**
 * Registers an `MPI_Wait` call into a static vector.
 */
void register_wait(MpiRank current_rank, MpiReq req, Tsc tsc, Tsc duration);
