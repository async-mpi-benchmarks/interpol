#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>


typedef int32_t MpiComm;

typedef uint32_t MpiReq;

#define WORLD 0

/**
 * Registers an `MPI_Init` call into the static `TRACES` vector.
 */
void register_init(uint64_t cycles, double time);

/**
 * Registers an `MPI_Send` call into the static `TRACES` vector.
 */
void register_send(uint64_t cycles_lo,
                   uint64_t cycles_hi,
                   size_t bytes,
                   MpiComm comm,
                   int32_t current_rank,
                   int32_t partner_rank,
                   int32_t tag);

/**
 * Registers an `MPI_Recv` call into the static `TRACES` vector.
 */
void register_recv(uint64_t cycles_lo,
                   uint64_t cycles_hi,
                   size_t bytes,
                   MpiComm comm,
                   int32_t current_rank,
                   int32_t partner_rank,
                   int32_t tag);

/**
 * Registers an `MPI_Isend` call into the static `TRACES` vector.
 */
void register_isend(uint64_t cycles_lo,
                    uint64_t cycles_hi,
                    size_t bytes,
                    MpiComm comm,
                    MpiReq req,
                    int32_t current_rank,
                    int32_t partner_rank,
                    int32_t tag);

/**
 * Registers an `MPI_Irecv` call into the static `TRACES` vector.
 */
void register_irecv(uint64_t cycles_lo,
                    uint64_t cycles_hi,
                    size_t bytes,
                    MpiComm comm,
                    MpiReq req,
                    int32_t current_rank,
                    int32_t partner_rank,
                    int32_t tag);

/**
 * Registers an `MPI_Wait` call into the static `TRACES` vector.
 */
void register_wait(uint64_t cycles_lo,
                   uint64_t cycles_hi,
                   MpiReq req,
                   int32_t current_rank);

/**
 * Registers an `MPI_Finalize` call into the static `TRACES` vector.
 *
 * As this *should* be the final registered event, serializes the contents of the `TRACES` vector.
 */
void register_finalize(uint64_t cycles,
                       double time,
                       int32_t rank);
